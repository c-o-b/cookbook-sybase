#!/bin/sh
#
# Startup script for Sybase ASE
#
# description: Sybase Adaptive Server Enterprise
# is a SQL database server.
# processname: dataserver
#
# Sybase user must be able to execute RUN_$SYBASE
# Sybase user must be able to write to sybase logs
# Sybase user must own $SYBASE/data


SYBASE=<%=node[:sybase][:rsp][:user_install_dir]%>
SERVER=<%=node[:sybase][:rsp][:sy_cfg_ase_server_name]%>
ASEDIR=<%=node[:sybase][:ase_dir]%>

# Source environment variables.
. $SYBASE/SYBASE.sh


# Find the name of the script
NAME=`basename $0`


# For SELinux we need to use 'runuser' not 'su'
if [ -x /sbin/runuser ]
then
    SU=runuser
else
    SU=su
fi


start() {
    SYBASE_START="Starting ${NAME} service: "
    $SU sybase -c ". $SYBASE/SYBASE.sh; $SYBASE/$ASEDIR/install/startserver -f $SYBASE/$ASEDIR/install/RUN_${SERVER} > /dev/null"
    ret=$?
    if [ $ret -eq 0 ]
    then
        echo "$SYBASE_START Success."
    else
        echo "$SYBASE_START Failed!"
              exit 1
    fi
}


stop() {
    echo -n "Stopping ${NAME} service: "
    $SU sybase -c ". $SYBASE/SYBASE.sh; isql -S $SERVER -U sa -P '<%=node[:sybase][:rsp][:sy_cfg_ase_password]%>' < $SYBASE/$ASEDIR/upgrade/shutdown.sql > /dev/null"
    ret=$?
    if [ $ret -eq 0 ]
    then
        echo "Success."
    else
        echo "Failed!"
        exit 1
    fi
}


restart() {
    stop
    start
}

status() {
    SYBASE_STATUS="Status: "
    $SU sybase -c ". $SYBASE/SYBASE.sh; $SYBASE/$ASEDIR/install/showserver"
    echo

    ret=$?
    if [ $ret -ne 0 ]
    then
        echo "${SYBASE_STATUS} Failed!"
        exit 1
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 1
esac
exit 0
